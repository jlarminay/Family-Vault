// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String
  provider       String
  avatar         String?
  comments       Comment[] // can have many comments
  uploadedVideos Video[] // can upload many videos
  likes          Like[] // can have many likes
  person         Person? // can optioanlly be attached to 1 person
  Report         Report[] // can report many videos
}

model Person {
  id        Int       @id @default(autoincrement())
  name      String
  gender    String?
  image     String?
  birthday  DateTime?
  deathday  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  videos    Video[] // can be in many videos
  userId    Int?      @unique
  user      User?     @relation(fields: [userId], references: [id])
}

model Video {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  url         String
  thumbnail   String?
  duration    Int
  resolution  String
  size        Int
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[] // can have many comments
  persons     Person[] // can contain many people
  likes       Like[] // can have multiple likes
  Report      Report[] // can be reported multiple times
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id])

  // user can only like video once
  @@unique([userId, videoId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id])
}

model Report {
  id        Int      @id @default(autoincrement())
  report    String
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id])
}
